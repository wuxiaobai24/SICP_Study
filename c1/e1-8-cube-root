(define (square x)
	(* x x))
    
(define (improve guess x)
	(/ (+ (/ x (square guess))
		(* 2 guess)) 
	    3))

(define (abs x)
	(if (> x 0) x (- x)))

(define (cube x)
	(* x x x))

(define (good-enought? guess x)
	(< (abs (- (cube guess) x)) 
	    0.00001))
	    

(define (cube-root-iter guess x)
	(if (good-enought? guess x)
	    guess
	    (cube-root-iter (improve guess x) x)))

(define (cube-root x)
	(cube-root-iter 1.0 x))

(cube-root 27)

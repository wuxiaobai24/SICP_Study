(define (average x y)
	(/ (+ x y) 2))

(define (improve guess x)
	(average guess (/ x guess)))

(define (abs x)
	(if (> x 0) x (- x)))

(define (square x)
	(* x x))

(define (good-enought? guess x)
	(< (abs (- (square guess) x)) 0.0001))

(define (ggood-enought? guess x)
	(<  (/  (abs ( - guess (improve guess x)))
	     guess) 
	 0.00001))

(define (sqrt-iter guess x)
	(if (ggood-enought? guess x)
	    guess
	    (sqrt-iter (improve guess x)
			x)
	))

(define (sqrt x)
	(sqrt-iter 1.0 x))

(sqrt 9)
(sqrt 1)
(sqrt 2)
